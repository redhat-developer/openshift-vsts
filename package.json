{
  "name": "openshift-vsts",
  "version": "1.0.0",
  "description": "OpenShift TFS/VSTS Marketplace Extension",
  "main": "index.js",
  "engines": {
    "vscode": "^1.25.0"
  },
  "activationEvents": [
    "onDebug"
  ],
  "scripts": {
    "all": "npm install && npm run build && npm run test",
    "setup": "npm install -g tfx-cli typescript json del-cli copy-node-modules markserv ts-mocha mocha mocha-junit-reporter",
    "clean": "del-cli **/out **/node_modules **/.taskkey",
    "compile": "tsc -b .",
    "build": "npm run lint && tsc -b . && npm run copy-utils-file",
    "build:watch": "tsc -b tsconfig.json -w",
    "docs": "markserv .",
    "pretest": "npm run compile",
    "watch": "tsc -watch -p ./",
    "lint": "node_modules/.bin/eslint . --ext .ts --quiet",
    "test": "ts-mocha -p tsconfig.json test/*.test.ts --timeout 5000 ${MOCHA_TAG}",
    "test:report": "npm run test -- --reporter mocha-simple-html-reporter --reporter-options output=out/test-report.html",
    "test:report:ci": "npm run test -- --reporter mocha-junit-reporter --reporter-options mochaFile=out/test-report.xml",
    "prettier:base": "prettier --parser typescript --single-quote",
    "prettier:check": "npm run prettier:base -- --list-different \"src/*.ts\" \"test/*.ts\"",
    "prettier:write": "npm run prettier:base -- --write \"**/**/*.ts\"",
    "copy-node-modules": "for i in `ls tasks` ; do copy-node-modules . tasks/$i; done",
    "copy-utils-file": "cp src/oc-utils.json out/src/",
    "copy-task-utils": "for i in `ls tasks` ; do cp -r src/oc-utils.json tasks/$i/lib/; done",
    "copy-task-lib": "for i in `ls tasks` ; do cp -r out/src/. tasks/$i/lib/; done",
    "bump-task-version": "for i in `ls tasks` ; do TASK=$(cat tasks/$i/task.json | json -e 'this.version.Patch++'); echo \"$TASK\" > tasks/$i/task.json; done",
    "extension:version:set": "JSON=$(cat vss-extension.json | json -e \"this.version='${EXT_VERSION}'\") && echo \"$JSON\" > vss-extension.json",
    "extension:version:view": "cat vss-extension.json | json version",
    "preextension:create": "npm run copy-task-lib && npm run copy-node-modules && npm run copy-task-utils",
    "extension:create": "tfx extension create --token $TOKEN --output-path out",
    "preextension:create:dev": "npm run extension:create",
    "preextension:create:patch": "npm run bump-task-version && npm run extension:create -- --rev-version",
    "extension:create:dev": "tfx extension create --token $TOKEN --output-path out --publisher $DEV_PUBLISHER --overrides-file ./scripts/vsix-manifest-overrides.json",
    "extension:create:patch": "tfx extension create --token $TOKEN --output-path out --publisher $DEV_PUBLISHER --overrides-file ./scripts/vsix-manifest-overrides.json",
    "extension:publish": "tfx extension publish --token $TOKEN --vsix out/redhat.openshift-vsts-$(json -f vss-extension.json version).vsix",
    "extension:publish:dev": "tfx extension publish --token $TOKEN --vsix out/$DEV_PUBLISHER.openshift-vsts-$(json -f vss-extension.json version).vsix",
    "extension:share:dev": "tfx extension share --token $TOKEN --share-with $EXT_SHARES --publisher $DEV_PUBLISHER --extension-id openshift-vsts",
    "extension:unshare:dev": "tfx extension unshare --token $TOKEN --unshare-with $EXT_SHARES --publisher $DEV_PUBLISHER --extension-id openshift-vsts",
    "extension:publish:commit": "export EXT_VERSION=$(json -f vss-extension.json version) && git commit -a -m \"cut v${EXT_VERSION}\" && git tag v${EXT_VERSION} && git push --tags origin HEAD:master"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/redhat-developer/openshift-vsts.git"
  },
  "keywords": [],
  "author": "Red Hat",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/redhat-developer/openshift-vsts/issues"
  },
  "homepage": "https://github.com/redhat-developer/openshift-vsts#readme",
  "dependencies": {
    "@types/q": "^1.5.1",
    "@types/valid-url": "^1.0.2",
    "adm-zip": "^0.4.13",
    "argv-split": "^2.0.1",
    "azure-pipelines-task-lib": "^3.1.7",
    "azure-pipelines-tool-lib": "^1.3.2",
    "decompress": "^4.2.1",
    "decompress-tar": "^4.1.1",
    "decompress-targz": "^4.1.1",
    "del-cli": "^5.0.0",
    "node-fetch": "^2.6.7",
    "q": "^1.5.1",
    "semver": "^7.1.3",
    "substituter": "^1.3.0",
    "valid-url": "^1.0.9"
  },
  "devDependencies": {
    "@types/chai": "^4.1.6",
    "@types/glob": "^7.1.1",
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.12.7",
    "@types/sinon": "^7.0.13",
    "@types/uuid": "^8.3.0",
    "@typescript-eslint/eslint-plugin": "^2.16.0",
    "@typescript-eslint/parser": "^2.16.0",
    "chai": "^4.2.0",
    "chai-fs": "^2.0.0",
    "commit-message-validator": "^0.1.6",
    "copy-node-modules": "^1.0.4",
    "eslint": "^6.7.1",
    "eslint-config-airbnb-base": "^14.0.0",
    "eslint-config-prettier": "^6.7.0",
    "eslint-import-resolver-typescript": "^2.0.0",
    "eslint-plugin-header": "^3.0.0",
    "eslint-plugin-import": "2.18.2",
    "eslint-plugin-json": "^2.0.1",
    "eslint-plugin-prettier": "^3.1.1",
    "istanbul": "^0.4.5",
    "mocha": "^10.2",
    "mocha-jenkins-reporter": "^0.4.8",
    "mocha-junit-reporter": "^1.18.0",
    "mocha-simple-html-reporter": "^1.1.0",
    "prettier": "^1.14.3",
    "remap-istanbul": "^0.13.0",
    "sinon": "^7.4.2",
    "ts-mocha": "^6.0",
    "ts-node": "^7.0.1",
    "typescript": "^4.0.2"
  }
}
